/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class OperatingSystem */

#ifndef _Included_OperatingSystem
#define _Included_OperatingSystem
#ifdef __cplusplus
extern "C" {
#endif
#undef OperatingSystem_DRIVE_UNKNOWN
#define OperatingSystem_DRIVE_UNKNOWN 10L
#undef OperatingSystem_DRIVE_NO_ROOT_DIR
#define OperatingSystem_DRIVE_NO_ROOT_DIR 20L
#undef OperatingSystem_DRIVE_REMOVABLE
#define OperatingSystem_DRIVE_REMOVABLE 30L
#undef OperatingSystem_DRIVE_FIXED
#define OperatingSystem_DRIVE_FIXED 40L
#undef OperatingSystem_DRIVE_REMOTE
#define OperatingSystem_DRIVE_REMOTE 50L
#undef OperatingSystem_DRIVE_CDROM
#define OperatingSystem_DRIVE_CDROM 60L
#undef OperatingSystem_DRIVE_RAMDISK
#define OperatingSystem_DRIVE_RAMDISK 70L
#undef OperatingSystem_UNRECOGNIZED_DRIVE
#define OperatingSystem_UNRECOGNIZED_DRIVE 80L
#undef OperatingSystem_COLOR_WHITE
#define OperatingSystem_COLOR_WHITE 0L
#undef OperatingSystem_COLOR_INTENSITY_YELLOW
#define OperatingSystem_COLOR_INTENSITY_YELLOW 1L
#undef OperatingSystem_COLOR_INTENSITY_BLUE
#define OperatingSystem_COLOR_INTENSITY_BLUE 2L
#undef OperatingSystem_COLOR_INTENSITY_GREEN
#define OperatingSystem_COLOR_INTENSITY_GREEN 3L
#undef OperatingSystem_COLOR_INTENSITY_RED
#define OperatingSystem_COLOR_INTENSITY_RED 4L
#undef OperatingSystem_WH_CALLWNDPROC
#define OperatingSystem_WH_CALLWNDPROC 0L
#undef OperatingSystem_WH_CALLWNDPROCRET
#define OperatingSystem_WH_CALLWNDPROCRET 1L
#undef OperatingSystem_WH_CBT
#define OperatingSystem_WH_CBT 2L
#undef OperatingSystem_WH_DEBUG
#define OperatingSystem_WH_DEBUG 3L
#undef OperatingSystem_WH_FOREGROUNDIDLE
#define OperatingSystem_WH_FOREGROUNDIDLE 4L
#undef OperatingSystem_WH_GETMESSAGE
#define OperatingSystem_WH_GETMESSAGE 5L
#undef OperatingSystem_WH_JOURNALPLAYBACK
#define OperatingSystem_WH_JOURNALPLAYBACK 6L
#undef OperatingSystem_WH_JOURNALRECORD
#define OperatingSystem_WH_JOURNALRECORD 7L
#undef OperatingSystem_WH_KEYBOARD
#define OperatingSystem_WH_KEYBOARD 8L
#undef OperatingSystem_WH_KEYBOARD_LL
#define OperatingSystem_WH_KEYBOARD_LL 9L
#undef OperatingSystem_WH_MOUSE
#define OperatingSystem_WH_MOUSE 10L
#undef OperatingSystem_WH_MOUSE_LL
#define OperatingSystem_WH_MOUSE_LL 11L
#undef OperatingSystem_WH_MSGFILTER
#define OperatingSystem_WH_MSGFILTER 12L
#undef OperatingSystem_WH_SHELL
#define OperatingSystem_WH_SHELL 13L
#undef OperatingSystem_WH_SYSMSGFILTER
#define OperatingSystem_WH_SYSMSGFILTER 14L
/*
 * Class:     OperatingSystem
 * Method:    createMutex
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_OperatingSystem_createMutex
  (JNIEnv *, jobject, jstring);

/*
 * Class:     OperatingSystem
 * Method:    getDriveType
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_OperatingSystem_getDriveType
  (JNIEnv *, jobject, jstring);

/*
 * Class:     OperatingSystem
 * Method:    getVolumeName
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_OperatingSystem_getVolumeName
  (JNIEnv *, jobject, jstring);

/*
 * Class:     OperatingSystem
 * Method:    getFileSystemName
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_OperatingSystem_getFileSystemName
  (JNIEnv *, jobject, jstring);

/*
 * Class:     OperatingSystem
 * Method:    setDriveVolumeLabel
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_OperatingSystem_setDriveVolumeLabel
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     OperatingSystem
 * Method:    setHighPriorityClass
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_OperatingSystem_setHighPriorityClass
  (JNIEnv *, jobject);

/*
 * Class:     OperatingSystem
 * Method:    createProcess
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_OperatingSystem_createProcess__Ljava_lang_String_2
  (JNIEnv *, jobject, jstring);

/*
 * Class:     OperatingSystem
 * Method:    createProcess
 * Signature: (Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_OperatingSystem_createProcess__Ljava_lang_String_2Ljava_lang_String_2ZLjava_lang_String_2
  (JNIEnv *, jobject, jstring, jstring, jboolean, jstring);

/*
 * Class:     OperatingSystem
 * Method:    terminateProcess
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_OperatingSystem_terminateProcess
  (JNIEnv *, jobject, jlong);

/*
 * Class:     OperatingSystem
 * Method:    allocateConsole
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_OperatingSystem_allocateConsole
  (JNIEnv *, jobject);

/*
 * Class:     OperatingSystem
 * Method:    showWindow
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_OperatingSystem_showWindow
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     OperatingSystem
 * Method:    setWindowsHook
 * Signature: (ILjava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_OperatingSystem_setWindowsHook
  (JNIEnv *, jobject, jint, jstring, jstring);

/*
 * Class:     OperatingSystem
 * Method:    unHookWindowsHook
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_OperatingSystem_unHookWindowsHook
  (JNIEnv *, jobject, jint);

/*
 * Class:     OperatingSystem
 * Method:    printConsole
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_OperatingSystem_printConsole__Ljava_lang_String_2
  (JNIEnv *, jobject, jstring);

/*
 * Class:     OperatingSystem
 * Method:    printConsole
 * Signature: (Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_OperatingSystem_printConsole__Ljava_lang_String_2I
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     OperatingSystem
 * Method:    setConsoleTitle
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_OperatingSystem_setConsoleTitle
  (JNIEnv *, jobject, jstring);

/*
 * Class:     OperatingSystem
 * Method:    ejectRemovableMedia
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_OperatingSystem_ejectRemovableMedia
  (JNIEnv *, jobject, jstring);

/*
 * Class:     OperatingSystem
 * Method:    setConsoleForegroundColor
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_OperatingSystem_setConsoleForegroundColor
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
